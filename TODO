Stuff that doesn't work:

[ projects

	- Either persp-mode should work or independent emacs instances should be fully usable and snappy.

		If independent Emacs was really snappy (particularly in the shell), I could finally stop using the hacky server setup. Notably, it's missing:

	- saving caches shouldn't overwrite the old ones
	- some way to limit buffers the way persp-mode does it
	- syncing between emacs instances should be easy - maybe the generic clipboard is good enough?
	- startup needs to be <2s, on cli <0.5s
	- some way to identify running instances, like names or something

]

[ parentheses

	- "close all open parentheses" button that understands def-end pairs

		unfinished snippet:
	  (defun close-quoted-open-paren ()
	   (interactive)
	   (let (pos closing)
	     (with-syntax-table all-paren-syntax-table2
	       (setq pos (save-excursion (up-list -1) (point)))
	       (setq closing (matching-paren (char-after pos))))
	     (and (eq (char-syntax (char-before pos)) ?\\)
	          (not (eq (char-syntax (char-before (1- pos))) ?\\))
	          (insert (char-before pos)))
	     (insert closing)))

	  (defun close-open-parens ()
	    (interactive)
	    (sp-up-sexp))
	    ;; (insert (save-excursion (up-list -1) (matching-paren (char-after)))))

	  (global-set-key (kbd "C-c )") 'close-open-parens)

	  (setq sp-navigate-close-if-unbalanced t)

]

[ file navigation

	eventually, Emacs should replace mc
	- quick start (maybe make the init.el more modular, so terminal instances don't load look.el etc.)
	- panes
	- quick jump to terminal
	- make zsh suspend painless, or run some eshell thingy, or something

]

[ bugs / misc

	- Jumpy cursor, particularly in notes/markdown-mode. Unlikely about the mouse. auto-complete seems to make it worse, but doesn't cause it.
		Stating the suspicion that it has something to do with "last line on the screen" or "being in a list", or both.

	- minimap is unusable at the moment, mostly because it's either slow (minimap.el version) or super flickery (sublimity version)

	- breadcrumbs is completely unusable and the code is a mess, but automatic "get me back to where I was a moment ago" is badly needed

	- before-save-hooks should have a way to turn them off; probably a minor mode

	- fonts should have a bigger range, and their own temp-keymap so you can left-right select them

	- occur-x keymap conflicts with occur-edit

	- mc + wdired don't work together

	- smooth-scrolling should either be faster for big, messy files or auto-disable itself in them
]

[ project-specific code / keybindings

	.dir-locals.el is super-cool and also super-retarded because it warns aobut EVERYTHING. safe-local stuff needs to go by path or something instead. it's probably easier to replace it with a custom minor-mode etc. that is less retarded. unfortunately, none of the existing project modes seem to conceive of wanting to run custom lisp code bundled with a project.

	so I'm just gonna fork the dir-local code and advise find-file.

	what this needs to do:

	- go up and find .custom-code.el file (or stop at some reasonable point, say a .git boundary). either the files.el code works for that, or whatever projectile uses, unless it's too messy to port.

	- eval the file and apply to buffer (after loading it), probably by hooking into find-file-hook (without asking stupid questions).

	- provide convenient shortcuts available in the file
		- define custom macro (probably on (C-)f5 to (C-)f8)
		- defun custom functions only available *in this buffer*, probably with something like this: <https://stackoverflow.com/questions/8008211>

]

[ regexes

	- universal rx support, possibly by extending phi-search (also needs a history)
	- might need to fix isearch mess
	- alternatively, use isearch for simple searches, and phi-searches for rx?

]

[ mode-line

	it needs to be cleaned up at some point. notably:

	- move nyan-cat *after* the number, maybe even to the very end, so that tiny buffers are more useful.

		(:eval (list (nyan-create)))

	- clean up what part of the encoding thingies we want
	- remove useless parentheses

]

[ reorganize how buffers are used
	It might be useful to no longer have ido auto-open old files so we have a clean buffer list, and instead start using recentf.

]

[ company-mode
	Might be worth it to switch to company-mode if that makes extensions simpler to write.

]

[ eshell
	- auto completion
	- convert everything ugh
	- fix hungry-delete deleting read-only parts

]

[ lisp
	{ poss aliases
		(unroll list a b)
		(apply 'f a b x) -> (-> f a b x)
		some short names for common stuff
	}
	
	- always load repl? maybe load in background?

]