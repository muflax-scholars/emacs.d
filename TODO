Stuff that doesn't work:

[ projects

	- Either persp-mode should work or independent emacs instances should be fully usable and snappy.

		If independent Emacs was really snappy (particularly in the shell), I could finally stop using the hacky server setup. Notably, it's missing:

	- saving caches shouldn't overwrite the old ones
	- some way to limit buffers the way persp-mode does it
	- syncing between emacs instances should be easy - maybe the generic clipboard is good enough?
	- startup needs to be <2s, on cli <0.5s
	- some way to identify running instances, like names or something

]

[ parentheses

	- smartparens is annoying because it's so over-bearing; it should be replaced with something simpler

		I mostly just need the sexp-functions (which newer ruby-mode might make unnecessary) and the sane "(re)wrap selection with things" feature. Might just fork it and remove the annoying auto-pairing entirely.

		- "close all open parentheses" button that understands def-end pairs

		unfinished snippet:
	  (defun close-quoted-open-paren ()
	   (interactive)
	   (let (pos closing)
	     (with-syntax-table all-paren-syntax-table2
	       (setq pos (save-excursion (up-list -1) (point)))
	       (setq closing (matching-paren (char-after pos))))
	     (and (eq (char-syntax (char-before pos)) ?\\)
	          (not (eq (char-syntax (char-before (1- pos))) ?\\))
	          (insert (char-before pos)))
	     (insert closing)))

	  (defun close-open-parens ()
	    (interactive)
	    (sp-up-sexp))
	    ;; (insert (save-excursion (up-list -1) (matching-paren (char-after)))))

	  (global-set-key (kbd "C-c )") 'close-open-parens)

	  (setq sp-navigate-close-if-unbalanced t)

]

[ file navigation

	[ eventually, Emacs should replace mc
		- quick start (maybe make the init.el more modular, so terminal instances don't load look.el etc.)
		- panes
		- quick jump to terminal
		- make zsh suspend painless, or run some eshell thingy, or something
	]

]

[ bugs / misc

	- Jumpy cursor, particularly in notes/markdown-mode. Unlikely about the mouse. auto-complete seems to make it worse, but doesn't cause it.

		Stating the suspicion that it has something to do with "last line on the screen" or "being in a list", or both.

	- align.el uses tabs to indent when tabstops are enabled?! teh fuck align.el?! I hate you so much.

	- is custom org mode still necessary?

	- minimap is unusable at the moment, mostly because it's either slow (minimap.el version) or super flickery (sublimity version)

	- breadcrumbs is completely unusable and the code is a mess, but automatic "get me back to where I was a moment ago" is badly needed

	- before-save-hooks should have a way to turn them off; probably a minor mode

]

[ project-specific code / keybindings

	.dir-locals.el is super-cool and also super-retarded because it warns aobut EVERYTHING. safe-local stuff needs to go by path or something instead. it's probably easier to replace it with a custom minor-mode etc. that is less retarded. unfortunately, none of the existing project modes seem to conceive of wanting to run custom lisp code bundled with a project.

	so I'm just gonna fork the dir-local code and advise find-file.

	what this needs to do:

	- go up and find .custom-code.el file (or stop at some reasonable point, say a .git boundary). either the files.el code works for that, or whatever projectile uses, unless it's too messy to port.

	- eval the file and apply to buffer (after loading it), probably by hooking into find-file-hook (without asking stupid questions).

	- provide convenient shortcuts available in the file
		- define custom macro (probably on (C-)f5 to (C-)f8)
		- defun custom functions only available *in this buffer*, probably with something like this: <https://stackoverflow.com/questions/8008211>

]

[ regexes

	visual-regexes is cool, but is Python-based. That's mostly fine, but I either:

	- should switch completely to Emacs regexes, which have some cool stuff (but muh Ruby!!w!)
	- finish the Ruby port

	Emacs regexps are pretty cool, but lack some important categories. Needs more work.

]

[ mode-line

	it needs to be cleaned up at some point. notably:

	- move nyan-cat *after* the number, maybe even to the very end, so that tiny buffers are more useful.

		(:eval (list (nyan-create)))

	- clean up what part of the encoding thingies we want
	- remove useless parentheses
	- shorter major-mode names

]

[ input

	- auto-complete is glitchy and I probably should stop using it. i really only use "what was this function called again?", for which it isn't even very good.
	- auto-save all macros somewhere, so I can easily retrieve / rebind them later (maybe just an advice around macro naming?)

]

[ rebind cursors
	Multi-key prefix combos are awesome. Reorganize behind a single prefix:

	- MC (also in phi-search)
	- smartparens
	- spell check
	- align
]